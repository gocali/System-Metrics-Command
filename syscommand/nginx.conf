worker_processes 1;
events { worker_connections 1024; }
http {
  # Konteynerler yeniden başladığında upstream konteynerlerini yeniden çözmek için Docker gömülü DNS kullan
  resolver 127.0.0.11 ipv6=off valid=30s;
  proxy_connect_timeout 3s;
  proxy_send_timeout 30s;
  proxy_read_timeout 30s;
  proxy_next_upstream error timeout invalid_header http_502 http_503 http_504 non_idempotent;
  server {
    listen 8080;
    # Sağlık kontrolü
    location /healthz { return 200 'ok'; add_header Content-Type text/plain; }

    # Frontend (statik dosyalar)
    location / {
      set $fe http://frontend:80;
      proxy_pass $fe;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # Yeni yapılandırmaların geçerli olması için index.html'in agresif tarayıcı önbelleğe alınmasını önle
      add_header Cache-Control "no-cache, no-store, must-revalidate" always;
      add_header Pragma "no-cache" always;
      add_header Expires "0" always;
    }

    # Backend API
    location /api/ {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      set $be http://backend:8080;
      proxy_pass $be;
    }

    # WebSocket üzerinden MQTT
    location /mqtt {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_read_timeout 86400;
      proxy_send_timeout 86400;
      proxy_buffering off;
      set $mqws http://mqtt:9001;
      proxy_pass $mqws;
    }
  }
}
